# THIS FILE HAS BEEN GENERATED BY CHEF
# ANY MANUAL MODIFICATIONS WILL BE OVERWRITTEN
# mongodb.conf

# Note: if you run mongodb as a non-root user (recommended) you may
# need to create and set permissions for this directory manually,
# e.g., if the parent directory isn't mutable by the mongodb user.

<%
  config = node[:mongodb][:server]

  {
    # Basic Database Configuration
    :dbpath => "Location of the database files",
    :port => "Port the mongod will listen on",
    :logpath => "Full filename path to where log messages will be written",
    :logappend => "Whether the log file will be appended (TRUE) or over-written (FALSE)",

    # Logging
    :cpu => "Enable periodic logging (TRUE) of CPU utilization and I/O wait",

    # Administration & Monitoring
    :nohttpinterface => "Disable the HTTP interface. The default port is 1000 more than the dbport",
    :rest => "Turn on simple rest API",
    :noscripting => "Turns off server-side scripting. This will result in greatly limited functionality",
    :notablescan => "Turns off table scans. Any query that would do a table scan fails",
    :noprealloc => "Disable data file preallocation",
    :nssize => "Specify .ns file size for new databases in MB",
    :quota => "Enable quota management",
    :quotaFiles => "Determines the number of files per Database (default is 8)",
    :diaglog => "Set oplogging level",

    # Sharding
    :shardsvr => "Indicates that this mongod will participate in sharding *Optional and just changes the default port",

    # Journaling
    :nojournal => "Whether writes will be journaled or not. This feature enables fast recovery from crashes",

  }.each do |option, desc|
    if config[option] && !config[option].to_s.empty?
%>
# <%= desc %>
<%= option %> = <%= config[option] %>
<%
    end
  end
%>

<% if config[:verbose] %>
# Log Verbosity
<% if verbosity = /v{1,5}/.match(config[:verbosity_level]) %>
<%= verbosity.to_s %> = true
<% else %>
verbose = true
<% end %>
<% end %>

# Specific IP address that mongod will listen on
bind_ip = <%= config[:bind_ip] %>

# Security
<% if config[:auth] %>
# Turn on/off security. Off is currently the default
# Not sure if this was fixed, but auth=false didn't use to work
auth = true
<% else %>
noauth = true
<% end %>

<% if config[:mms] %>
# Mongo Monitoring Server

# Accout token for Mongo monitoring server.
mms-token = <%= config[:mms_token] %>
# Server name for Mongo monitoring server.
mms-name = <%= config[:mms_name] %>
# Ping interval for Mongo monitoring server.
mms-interval = <%= config[:mms_interval] %>
<% end %>

# Replication Options

<% if config[:replication] %>
<% if config[:autoresync] %>
# Automatically resync if slave data is stale
autoresync
<% end %>
<% if config[:fastsync] %>
# Indicate that this instance is starting from a dbpath snapshot of the repl peer
fastsync = true
<% end %>
<% if config[:opidmem] && config[:opidmem].to_i != 0 %>
# Size limit for in-memory storage of op ids in bytes
opIdMem = <%= config[:opidmem] * 1024 * 1024 %>
<% end %>
<% if config[:oplogsize] && config[:oplogsize].to_i != 0 %>
# Custom size for replication operation log in MB
oplogSize = <%= config[:oplogsize] %>
<% end %>

# in master/slave replicated mongo databases, specify here whether
# this is a slave or master
#slave = true
#source = master.example.com
# Slave only: specify a single database to replicate
#only = master.example.com
# or
#master = true
#source = slave.example.com

<% if config[:slave] %>
# In replicated mongo databases, specify here whether this is a slave or master
slave = true
# Specify the	source ex. source = master.example.com
source = <%= config[:slave_source] %>
<% unless config[:slave_only].empty? %>
# Slave only: specify a single database to replicate
only = <%= config[:slave_only] %>
<% end %>
<% end %>
<% if config[:master] %>
# In replicated mongo databases, specify here whether this is a slave or master
master = true
<% end %>

# in replica set configuration, specify the name of the replica set
# replSet = setname

<% if config[:replSet] && !config[:replSet].to_s.empty?  %>
# Use replica sets with the specified logical set name.  Typically the optional seed host list need not be specified
replSet = <%= config[:replSet] %>
<% end %>
<% if config[:keyFile] && !config[:keyFile].to_s.empty? %>
# Private key for cluster authentication
keyFile = <%= config[:keyFile] %>
<% end %>

<% end %>

